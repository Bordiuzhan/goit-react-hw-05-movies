{"version":3,"file":"static/js/659.b2d6049a.chunk.js","mappings":"kTACMA,EAAS,mCACTC,EAAW,gCAEJC,EAAW,mCAAG,oGACFC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,oCACkBD,IAFhB,cACnBI,EADmB,yBAKlBA,GALkB,2CAAH,qDAQXC,EAAS,mCAAG,WAAMC,GAAN,uFACAH,EAAAA,EAAAA,IAAA,UAClBF,EADkB,gCACcD,EADd,kBAC8BM,IAF9B,cACjBF,EADiB,yBAIhBA,GAJgB,2CAAH,sDAOTG,EAAO,mCAAG,WAAMD,GAAN,uFACEH,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACDK,EADC,oBACeN,EADf,oBADF,cACfI,EADe,yBAIdA,GAJc,2CAAH,sDAMPI,EAAU,mCAAG,WAAMF,GAAN,uFACDH,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACDK,EADC,4BACuBN,EADvB,2BADC,cAClBI,EADkB,yBAIjBA,GAJiB,2CAAH,sDAMVK,EAAO,mCAAG,WAAMH,GAAN,uFACEH,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACDK,EADC,4BACuBN,EADvB,oBADF,cACfI,EADe,yBAIdA,GAJc,2CAAH,qD,+JC1BL,SAASM,IACtB,IAAQC,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAE2BR,EAAAA,EAAAA,IAAWG,GAFtC,OAEUP,EAFV,OAGIW,EAAWX,EAASE,KAAKW,SAH7B,gDAKIC,EAAAA,GAAAA,MAAY,qBALhB,0DADc,uBAAC,WAAD,wBASdC,EACD,GAAE,CAACR,KAGF,gCACsB,IAAnBG,EAAQM,SAAgB,mEACxBN,IACC,wBACGA,EAAQO,KAAI,YAA8B,IAA3BV,EAA0B,EAA1BA,GAAIW,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC1B,OACE,2BACE,qCAAaD,MACb,uBAAIC,MAFGZ,EAKZ,QAKV,C","sources":["API.js","components/ItemDetailsPage/Reviews.js"],"sourcesContent":["import axios from 'axios';\nconst APIkey = '32c4a311ef83ff634434de560e91729a';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const APItrending = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/all/day?api_key=${APIkey}`\n  );\n\n  return response;\n};\n\nexport const APIsearch = async data => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${APIkey}&query=${data}`\n  );\n  return response;\n};\n\nexport const APIbyId = async data => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${data}?api_key=${APIkey}&language=en-US`\n  );\n  return response;\n};\nexport const APIreviews = async data => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${data}/reviews?api_key=${APIkey}&language=en-US&page=1`\n  );\n  return response;\n};\nexport const APIcast = async data => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${data}/credits?api_key=${APIkey}&language=en-US`\n  );\n  return response;\n};\n","import { APIreviews } from 'API';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nexport default function Reviews() {\n  const { id } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    async function fetchReviews() {\n      try {\n        const response = await APIreviews(id);\n        setReviews(response.data.results);\n      } catch (error) {\n        toast.error('Error happened!!!');\n      }\n    }\n    fetchReviews();\n  }, [id]);\n\n  return (\n    <>\n      {reviews.length === 0 && <p>We dont have any reviews for this movie</p>}\n      {reviews && (\n        <ul>\n          {reviews.map(({ id, author, content }) => {\n            return (\n              <li key={id}>\n                <h3>Author: {author}</h3>\n                <p>{content}</p>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </>\n  );\n}\n"],"names":["APIkey","BASE_URL","APItrending","axios","response","APIsearch","data","APIbyId","APIreviews","APIcast","Reviews","id","useParams","useState","reviews","setReviews","useEffect","results","toast","fetchReviews","length","map","author","content"],"sourceRoot":""}