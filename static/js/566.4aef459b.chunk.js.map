{"version":3,"file":"static/js/566.4aef459b.chunk.js","mappings":"kTACMA,EAAS,mCACTC,EAAW,gCAEJC,EAAW,mCAAG,oGACFC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,oCACkBD,IAFhB,cACnBI,EADmB,yBAKlBA,GALkB,2CAAH,qDAQXC,EAAS,mCAAG,WAAMC,GAAN,uFACAH,EAAAA,EAAAA,IAAA,UAClBF,EADkB,gCACcD,EADd,kBAC8BM,IAF9B,cACjBF,EADiB,yBAIhBA,GAJgB,2CAAH,sDAOTG,EAAO,mCAAG,WAAMD,GAAN,uFACEH,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACDK,EADC,oBACeN,EADf,oBADF,cACfI,EADe,yBAIdA,GAJc,2CAAH,sDAMPI,EAAU,mCAAG,WAAMF,GAAN,uFACDH,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACDK,EADC,4BACuBN,EADvB,2BADC,cAClBI,EADkB,yBAIjBA,GAJiB,2CAAH,sDAMVK,EAAO,mCAAG,WAAMH,GAAN,uFACEH,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACDK,EADC,4BACuBN,EADvB,oBADF,cACfI,EADe,yBAIdA,GAJc,2CAAH,qD,+LC5BPM,EAAYC,EAAAA,GAAAA,IAAH,iRAUTC,EAASD,EAAAA,GAAAA,IAAH,yCAGNE,EAAYF,EAAAA,GAAAA,IAAH,8CAGTG,EAAWH,EAAAA,GAAAA,IAAH,oUAYRI,GAAOJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,6EAOJM,GAAMN,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,yG,SCtBD,SAASO,IAAe,IAAD,IAC5BC,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAAkCE,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA0BF,EAAAA,EAAAA,WAAS,GAAnC,eAAOG,EAAP,KAAcC,EAAd,KAEMC,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAc7C,OAZAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAE2BvB,EAAAA,EAAAA,IAAQY,GAFnC,OAEUf,EAFV,OAGImB,EAAanB,EAASE,MAH1B,gDAKImB,GAAS,GALb,0DADc,uBAAC,WAAD,wBASdM,EACD,GAAE,CAACZ,KAGF,gCACGG,IACC,6BACE,SAACL,EAAD,CAAKe,GAAIN,EAAT,8BACA,UAAChB,EAAD,YACE,SAACE,EAAD,CACEqB,IACEX,EAAUY,YA7BF,mCA8BcZ,EAAUY,YAC5BC,EAENC,IAAKd,EAAUe,SAEjB,UAACxB,EAAD,YACE,0BACGS,EAAUgB,eADb,KAC+BhB,EAAUiB,aAAaC,MAAM,EAAG,GAD/D,QAIA,wCAAgBC,KAAKC,MAA+B,GAAzBpB,EAAUqB,cAArC,QACA,sCACA,uBAAIrB,EAAUsB,YACd,oCACA,uBACGtB,EAAUuB,OACRC,KAAI,YACH,OADiB,EAAXC,IAEP,IACAC,KAAK,cAId,UAAClC,EAAD,YACE,mDACA,2BACE,yBACE,SAACC,EAAD,CAAMiB,GAAG,OAAOJ,MAAO,CAAEC,KAAMH,GAA/B,qBAIF,yBACE,SAACX,EAAD,CAAMiB,GAAG,UAAU1B,KAAMa,EAAIS,MAAO,CAAEC,KAAMH,GAA5C,8BAMN,SAAC,EAAAuB,SAAD,WACE,SAAC,KAAD,SAILzB,IACC,4BACE,SAACP,EAAD,CAAKe,GAAIN,EAAT,mCACA,oDAKT,C","sources":["API.js","components/ItemDetailsPage/ItemDetails.styled.js","components/ItemDetailsPage/ItemDetails.js"],"sourcesContent":["import axios from 'axios';\nconst APIkey = '32c4a311ef83ff634434de560e91729a';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const APItrending = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/all/day?api_key=${APIkey}`\n  );\n\n  return response;\n};\n\nexport const APIsearch = async data => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${APIkey}&query=${data}`\n  );\n  return response;\n};\n\nexport const APIbyId = async data => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${data}?api_key=${APIkey}&language=en-US`\n  );\n  return response;\n};\nexport const APIreviews = async data => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${data}/reviews?api_key=${APIkey}&language=en-US&page=1`\n  );\n  return response;\n};\nexport const APIcast = async data => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${data}/credits?api_key=${APIkey}&language=en-US`\n  );\n  return response;\n};\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MovieCard = styled.div`\n  display: flex;\n  margin-top: 50px;\n  border: 1px solid #ececec;\n  border-top: none;\n  box-shadow: inset 2px 2px 2px 0px rgba(255, 255, 255, 0.5),\n    7px 7px 20px 0px rgba(0, 0, 0, 0.1), 4px 4px 5px 0px rgba(0, 0, 0, 0.1);\n  outline: none;\n`;\n\nexport const Poster = styled.img`\n  width: 350px;\n`;\nexport const WrapMovie = styled.div`\n  margin-left: 20px;\n`;\nexport const WrapInfo = styled.div`\n  margin-bottom: 10px;\n  margin-top: 10px;\n  padding-top: 10px;\n  padding-left: 10px;\n  border: 1px solid #ececec;\n  border-top: none;\n  box-shadow: inset 2px 2px 2px 0px rgba(255, 255, 255, 0.5),\n    7px 7px 20px 0px rgba(0, 0, 0, 0.1), 4px 4px 5px 0px rgba(0, 0, 0, 0.1);\n  outline: none;\n`;\n\nexport const Link = styled(NavLink)`\n  color: blue;\n  :visited {\n    color: blue;\n  }\n`;\n\nexport const Btn = styled(NavLink)`\n  color: black;\n  text-decoration: none;\n  :visited {\n    color: black;\n  }\n`;\n","import { APIbyId } from 'API';\nimport { Suspense, useEffect, useState } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\n\nimport posterNotFound from '../../img/posterNotFound.jpg';\nimport {\n  Btn,\n  Link,\n  MovieCard,\n  Poster,\n  WrapInfo,\n  WrapMovie,\n} from './ItemDetails.styled';\n\nconst BASE_POSTER_URL = 'https://image.tmdb.org/t/p/w500/';\n\nexport default function ItemDetails() {\n  const { id } = useParams();\n  const [movieData, setMovieData] = useState(null);\n  const [error, setError] = useState(false);\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    async function fetchById() {\n      try {\n        const response = await APIbyId(id);\n        setMovieData(response.data);\n      } catch {\n        setError(true);\n      }\n    }\n    fetchById();\n  }, [id]);\n\n  return (\n    <>\n      {movieData && (\n        <main>\n          <Btn to={backLinkHref}> ⬅ Go back</Btn>\n          <MovieCard>\n            <Poster\n              src={\n                movieData.poster_path\n                  ? BASE_POSTER_URL + movieData.poster_path\n                  : posterNotFound\n              }\n              alt={movieData.title}\n            />\n            <WrapMovie>\n              <h2>\n                {movieData.original_title} ({movieData.release_date.slice(0, 4)}\n                )\n              </h2>\n              <p>User Score: {Math.round(movieData.vote_average * 10)}%</p>\n              <h3>Overview</h3>\n              <p>{movieData.overview}</p>\n              <h3>Genres</h3>\n              <p>\n                {movieData.genres\n                  .map(({ name }) => {\n                    return name;\n                  })\n                  .join(' ')}\n              </p>\n            </WrapMovie>\n          </MovieCard>\n          <WrapInfo>\n            <p>Additional information</p>\n            <ul>\n              <li>\n                <Link to=\"cast\" state={{ from: backLinkHref }}>\n                  Cast\n                </Link>\n              </li>\n              <li>\n                <Link to=\"reviews\" data={id} state={{ from: backLinkHref }}>\n                  Reviews\n                </Link>\n              </li>\n            </ul>\n          </WrapInfo>\n          <Suspense>\n            <Outlet />\n          </Suspense>\n        </main>\n      )}\n      {error && (\n        <div>\n          <Btn to={backLinkHref}> ⬅ Back to Home</Btn>\n          <p>'Error happened!!!'</p>\n        </div>\n      )}\n    </>\n  );\n}\n"],"names":["APIkey","BASE_URL","APItrending","axios","response","APIsearch","data","APIbyId","APIreviews","APIcast","MovieCard","styled","Poster","WrapMovie","WrapInfo","Link","NavLink","Btn","ItemDetails","id","useParams","useState","movieData","setMovieData","error","setError","backLinkHref","useLocation","state","from","useEffect","fetchById","to","src","poster_path","posterNotFound","alt","title","original_title","release_date","slice","Math","round","vote_average","overview","genres","map","name","join","Suspense"],"sourceRoot":""}