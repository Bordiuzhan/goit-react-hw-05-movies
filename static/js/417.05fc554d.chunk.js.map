{"version":3,"file":"static/js/417.05fc554d.chunk.js","mappings":"kTACMA,EAAS,mCACTC,EAAW,gCAEJC,EAAW,mCAAG,oGACFC,EAAAA,EAAAA,IAAA,UAClBF,EADkB,oCACkBD,IAFhB,cACnBI,EADmB,yBAKlBA,GALkB,2CAAH,qDAQXC,EAAS,mCAAG,WAAMC,GAAN,uFACAH,EAAAA,EAAAA,IAAA,UAClBF,EADkB,gCACcD,EADd,kBAC8BM,IAF9B,cACjBF,EADiB,yBAIhBA,GAJgB,2CAAH,sDAOTG,EAAO,mCAAG,WAAMD,GAAN,uFACEH,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACDK,EADC,oBACeN,EADf,oBADF,cACfI,EADe,yBAIdA,GAJc,2CAAH,sDAMPI,EAAU,mCAAG,WAAMF,GAAN,uFACDH,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACDK,EADC,4BACuBN,EADvB,2BADC,cAClBI,EADkB,yBAIjBA,GAJiB,2CAAH,sDAMVK,EAAO,mCAAG,WAAMH,GAAN,uFACEH,EAAAA,EAAAA,IAAA,UAClBF,EADkB,iBACDK,EADC,4BACuBN,EADvB,oBADF,cACfI,EADe,yBAIdA,GAJc,2CAAH,qD,yLC7BPM,EAAOC,EAAAA,GAAAA,GAAH,6DAKJC,EAAMD,EAAAA,GAAAA,IAAH,+DAKHE,EAAOF,EAAAA,GAAAA,GAAH,mU,SCHF,SAASG,IACtB,IAAQC,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAE2BX,EAAAA,EAAAA,IAAQM,GAFnC,OAEUX,EAFV,OAGIe,EAAQf,EAASE,KAAKY,MAH1B,gDAKIG,EAAAA,GAAAA,MAAY,qBALhB,0DADc,uBAAC,WAAD,wBASdC,EACD,GAAE,CAACP,KAGF,8BACGG,IACC,SAACR,EAAD,UACGQ,EAAKK,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,aAAcC,EAA0B,EAA1BA,KAAMV,EAAoB,EAApBA,GAAIW,EAAgB,EAAhBA,UACnC,OACE,UAACb,EAAD,YACE,SAACD,EAAD,CACEe,IACEH,EA3BI,mCA2B6BA,EAAeI,EAElDC,IAAKJ,KAEP,uBAAIA,KACJ,0CAAkBC,OARTX,EAWd,OAKV,C","sources":["API.js","components/ItemDetailsPage/Cast.styled.js","components/ItemDetailsPage/Cast.js"],"sourcesContent":["import axios from 'axios';\nconst APIkey = '32c4a311ef83ff634434de560e91729a';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const APItrending = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/all/day?api_key=${APIkey}`\n  );\n\n  return response;\n};\n\nexport const APIsearch = async data => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${APIkey}&query=${data}`\n  );\n  return response;\n};\n\nexport const APIbyId = async data => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${data}?api_key=${APIkey}&language=en-US`\n  );\n  return response;\n};\nexport const APIreviews = async data => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${data}/reviews?api_key=${APIkey}&language=en-US&page=1`\n  );\n  return response;\n};\nexport const APIcast = async data => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${data}/credits?api_key=${APIkey}&language=en-US`\n  );\n  return response;\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  margin: 0;\n  padding-left: 35px;\n`;\n\nexport const Img = styled.img`\n  width: 100px;\n  margin-left: 18px;\n`;\n\nexport const Item = styled.li`\n  margin-bottom: 24px;\n  list-style-type: none;\n  p {\n    display: flex;\n    align-items: center;\n  }\n\n  p::before {\n    width: 6px;\n    height: 6px;\n    background: black;\n    border-radius: 50px;\n    content: '';\n    margin-right: 11px;\n  }\n\n  span {\n    margin-left: 18px;\n  }\n`;\n","import { APIcast } from 'API';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport castPhoto from '../../img/castPhoto.jpeg';\nimport { Img, Item, List } from './Cast.styled';\n\nconst BASE_POSTER_URL = 'https://image.tmdb.org/t/p/w500/';\n\nexport default function Cast() {\n  const { id } = useParams();\n  const [cast, setCast] = useState(null);\n\n  useEffect(() => {\n    async function fetchCast() {\n      try {\n        const response = await APIcast(id);\n        setCast(response.data.cast);\n      } catch (error) {\n        toast.error('Error happened!!!');\n      }\n    }\n    fetchCast();\n  }, [id]);\n\n  return (\n    <>\n      {cast && (\n        <List>\n          {cast.map(({ profile_path, name, id, character }) => {\n            return (\n              <Item key={id}>\n                <Img\n                  src={\n                    profile_path ? BASE_POSTER_URL + profile_path : castPhoto\n                  }\n                  alt={name}\n                />\n                <p>{name}</p>\n                <span>Character: {character}</span>\n              </Item>\n            );\n          })}\n        </List>\n      )}\n    </>\n  );\n}\n"],"names":["APIkey","BASE_URL","APItrending","axios","response","APIsearch","data","APIbyId","APIreviews","APIcast","List","styled","Img","Item","Cast","id","useParams","useState","cast","setCast","useEffect","toast","fetchCast","map","profile_path","name","character","src","castPhoto","alt"],"sourceRoot":""}