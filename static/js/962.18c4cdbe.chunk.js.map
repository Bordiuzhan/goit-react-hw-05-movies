{"version":3,"file":"static/js/962.18c4cdbe.chunk.js","mappings":"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","sources":["API.js","components/MoviesPage/MoviesList.styled.js","components/MoviesPage/MoviesList.js","components/MoviesPage/SearchBox.js","components/MoviesPage/Movies.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["import axios from 'axios';\nconst APIkey = '32c4a311ef83ff634434de560e91729a';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const APItrending = async () => {\n  const response = await axios.get(\n    `${BASE_URL}trending/all/day?api_key=${APIkey}`\n  );\n\n  return response;\n};\n\nexport const APIsearch = async data => {\n  const response = await axios.get(\n    `${BASE_URL}search/movie?api_key=${APIkey}&query=${data}`\n  );\n  return response;\n};\n\nexport const APIbyId = async data => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${data}?api_key=${APIkey}&language=en-US`\n  );\n  return response;\n};\nexport const APIreviews = async data => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${data}/reviews?api_key=${APIkey}&language=en-US&page=1`\n  );\n  return response;\n};\nexport const APIcast = async data => {\n  const response = await axios.get(\n    `${BASE_URL}movie/${data}/credits?api_key=${APIkey}&language=en-US`\n  );\n  return response;\n};\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Link = styled(NavLink)`\n  :visited {\n    color: blue;\n  }\n`;\n","import { APIsearch } from 'API';\nimport { toast } from 'react-toastify';\nimport { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { RotatingLines } from 'react-loader-spinner';\nimport { Link } from './MoviesList.styled';\nimport PropTypes from 'prop-types';\n\nexport const MoviesList = ({ movieName }) => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const location = useLocation();\n\n  useEffect(() => {\n    if (movieName === '') {\n      return;\n    }\n    async function fetchSearch() {\n      try {\n        setIsLoading(true);\n        const response = await APIsearch(movieName);\n        setMovies(response.data.results);\n      } catch {\n        toast.error('Error happened!!!');\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    fetchSearch();\n  }, [movieName]);\n\n  return (\n    <>\n      {isLoading && <RotatingLines />}\n      {movieName !== '' && movies.length === 0 && !isLoading && (\n        <p>Nothing was found for your request</p>\n      )}\n      {movies && !isLoading && (\n        <ul>\n          {movies.map(({ original_title, id }) => {\n            console.log();\n            return (\n              <li key={id}>\n                <Link to={`${id}`} state={{ from: location }}>\n                  {original_title}\n                </Link>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </>\n  );\n};\n\nMoviesList.protoType = {\n  movieName: PropTypes.string.isRequired,\n};\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const SearchBox = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const handelChange = e => {\n    setQuery(e.target.value.trim());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(query);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input type=\"text\" value={query} onChange={handelChange}></input>\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};\n\nSearchBox.protoType = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { MoviesList } from 'components/MoviesPage/MoviesList';\nimport { useSearchParams } from 'react-router-dom';\nimport { SearchBox } from './SearchBox';\n\nexport default function Movies() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get('query') ?? '';\n\n  const handlerQueryString = query => {\n    const nextParams = query !== '' ? { query } : {};\n    setSearchParams(nextParams);\n  };\n\n  return (\n    <div>\n      <SearchBox onSubmit={handlerQueryString} />\n\n      <MoviesList movieName={movieName} />\n    </div>\n  );\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["APIkey","BASE_URL","APItrending","axios","response","APIsearch","data","APIbyId","APIreviews","APIcast","Link","styled","NavLink","MoviesList","movieName","useState","movies","setMovies","isLoading","setIsLoading","location","useLocation","useEffect","results","toast","fetchSearch","length","map","original_title","id","console","log","to","state","from","protoType","PropTypes","SearchBox","onSubmit","query","setQuery","e","preventDefault","type","value","onChange","target","trim","Movies","useSearchParams","searchParams","setSearchParams","get","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","propFullName","secret","err","Error","name","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}